{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"about/","title":"About me","text":""},{"location":"about/#introduction","title":"Introduction","text":"<p>I'm a very messy person</p>"},{"location":"A%20Digital%20Garden/./","title":"This is my Digital Garden inc.","text":""},{"location":"A%20Digital%20Garden/./#why","title":"Why","text":"<p>this is it</p>"},{"location":"A%20Digital%20Garden/Fe-lang/code-structure--organisation/","title":"Design goals &amp; modularity","text":"","tags":["foo","bar"]},{"location":"A%20Digital%20Garden/Fe-lang/code-structure--organisation/#logical-structure","title":"Logical structure","text":"<ul> <li>file structure corresponds to module structure with support for optional inline module declarations</li> <li>full flexibility with namespaces that can be reused in multiple files?</li> <li>unsafe code needs a well defined boundary</li> <li>public reexports &amp; API design considerations</li> <li>privacy &amp; export facility </li> </ul>","tags":["foo","bar"]},{"location":"A%20Digital%20Garden/Fe-lang/code-structure--organisation/#physical-layout-of-source-code","title":"Physical layout of source code","text":"<p>include all files automatically vs have a project file that lists included files</p>","tags":["foo","bar"]},{"location":"A%20Digital%20Garden/Fe-lang/code-structure--organisation/#artefacts-deployment","title":"Artefacts, deployment","text":"","tags":["foo","bar"]},{"location":"A%20Digital%20Garden/Rust/rustic/","title":"Rust Programming language overview","text":""},{"location":"Blog/ffff/","title":"FOOFO","text":"<p>this is it readme{0730bb7c2e8f9ea2438b52e419dd86c9 }</p>"},{"location":"Blog/blog/","title":"This is my Blog","text":"<p>Backlinks:</p>"}]}